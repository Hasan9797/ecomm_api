name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            cd ~/ecomm_api/
            git pull
            npm install
            pm2 restart 0
            COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
            COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
            echo "$COMMIT_MESSAGE" > ~/commit_message.txt
            echo "$COMMIT_AUTHOR" > ~/commit_author.txt
            scp -o StrictHostKeyChecking=no -i ${{ secrets.KEY }} ~/commit_message.txt $GITHUB_WORKSPACE/commit_message.txt
            scp -o StrictHostKeyChecking-no -i ${{ secrets.KEY }} ~/commit_author.txt $GITHUB_WORKSPACE/commit_author.txt

      - name: Notify Telegram on success
        if: success()
        run: |
          COMMIT_MESSAGE=$(cat $GITHUB_WORKSPACE/commit_message.txt)
          COMMIT_AUTHOR=$(cat $GITHUB_WORKSPACE/commit_author.txt)
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="CD Successfully.\nCommit: $COMMIT_MESSAGE\nAuthor: $COMMIT_AUTHOR"

      - name: Notify Telegram on failure
        if: failure()
        run: |
          COMMIT_MESSAGE=$(cat $GITHUB_WORKSPACE/commit_message.txt)
          COMMIT_AUTHOR=$(cat $GITHUB_WORKSPACE/commit_author.txt)
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="CD Failed.\nCommit: $COMMIT_MESSAGE\nAuthor: $COMMIT_AUTHOR"
